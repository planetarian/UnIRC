<Page
    x:Class="UnIRC.Views.NetworksView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UnIRC"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding Networks, Source={StaticResource Locator}}">
    <Page.Resources>
        <Style TargetType="Button" x:Key="IconButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <SolidColorBrush x:Key="WarningBackground" Color="#111"/>
        <SolidColorBrush x:Key="WarningForeground" Color="Red"/>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="10">
        <Grid Width="310" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Begin Networks -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- Network Selector -->
                <TextBlock Text="Network:"/>
                <Grid Grid.Row="1"
                    Padding="0,10"
                    Visibility="{Binding IsEditingNetwork,
                    Converter={StaticResource IsFalseVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        ItemsSource="{Binding Networks}" DisplayMemberPath="Name"
                        SelectedItem="{Binding SelectedNetwork,
                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="0,2,10,0" HorizontalAlignment="Stretch" />
                    <Button
                        Style="{StaticResource IconButton}" Grid.Column="1"
                        Command="{Binding CreateNewNetworkCommand}" Content="&#xE710;" />
                    <Button
                        Style="{StaticResource IconButton}" Grid.Column="2"
                        Command="{Binding EditNetworkCommand}" Content="&#xE70F;" />
                </Grid>
                <!-- Network Editor -->
                <Grid
                    Grid.Row="2"
                    Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                    Visibility="{Binding IsEditingNetwork,
                    Converter={StaticResource IsTrueVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- Name: NetworkName -->
                    <Grid Padding="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name:" VerticalAlignment="Center" Padding="0,0,10,0" Grid.Column="0"/>
                        <TextBox
                            Text="{Binding NewNetworkName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding IsDeletingNetwork, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                            IsSpellCheckEnabled="False" InputScope="PersonalFullName"/>
                    </Grid>
                    <!-- [] Custom user info -->
                    <CheckBox
                            IsChecked="{Binding NewNetworkUseNetworkNick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding IsDeletingNetwork, Converter={StaticResource NegateConverter}}"
                            Content="Custom user info" VerticalAlignment="Center" Margin="10" Grid.Row="2"/>
                    <!-- Full Name: [FullName] -->
                    <Grid Margin="10" Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Full name:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                        <TextBox
                            Text="{Binding NewNetworkFullName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding CanEditNewNetworkNick}" Grid.Column="1"
                            IsSpellCheckEnabled="False" InputScope="PersonalFullName"/>
                    </Grid>
                    <!-- Email Address: [EmailAddress] -->
                    <Grid Margin="10" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Email:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                        <TextBox
                            Text="{Binding NewNetworkEmailAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding CanEditNewNetworkNick}" Grid.Column="1"
                            IsSpellCheckEnabled="False" InputScope="EmailNameOrAddress" />
                    </Grid>
                    <!-- Nick: [Nick] -->
                    <Grid Margin="10" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Nick:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                        <TextBox
                            Text="{Binding NewNetworkNick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding CanEditNewNetworkNick}" Grid.Column="1"
                            IsSpellCheckEnabled="False"/>
                    </Grid>
                    <!-- Backup nick: [BackupNick] -->
                    <Grid Margin="10" Grid.Row="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Backup nick:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                        <TextBox
                            Text="{Binding NewNetworkBackupNick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding CanEditNewNetworkNick}" Grid.Column="1"
                            IsSpellCheckEnabled="False"/>
                    </Grid>
                    <!-- [Delete?] / OK / Cancel / [Delete] -->
                    <Grid HorizontalAlignment="Center" Margin="10" Grid.Row="7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Style="{StaticResource IconButton}" Content="&#xE10B;" Command="{Binding SaveNetworkCommand}"/>
                        <Grid Visibility="{Binding IsDeletingNetwork, Converter={StaticResource IsTrueVisibilityConverter}}" Grid.Column="1">
                            <Grid Background="{StaticResource WarningBackground}"/>
                            <TextBlock Text="Delete network?" Foreground="{StaticResource WarningForeground}" Margin="16,8" FontWeight="SemiBold"/>
                        </Grid>
                        <Button Style="{StaticResource IconButton}" Content="&#xE711;" Command="{Binding CancelNetworkOperationCommand}" Grid.Column="2"/>
                        <Button
                            Style="{StaticResource IconButton}" Content="&#xE74D;" Command="{Binding DeleteNetworkCommand}"
                            IsEnabled="{Binding IsAddingNewNetwork, Converter={StaticResource NegateConverter}}"
                            Visibility="{Binding IsDeletingNetwork, Converter={StaticResource IsFalseVisibilityConverter}}" Grid.Column="3"/>
                    </Grid>
                </Grid>
            </Grid>
            <!-- End Networks -->
            
            <!-- Begin Servers -->
            <Grid
                Grid.Row="1"
                Visibility="{Binding SelectedNetwork,
                Converter={StaticResource IsNotNullVisibilityConverter}}">
                <Grid DataContext="{Binding SelectedNetwork}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- Server Selector -->
                    <TextBlock Text="Server:"/>
                    <Grid
                        Padding="0,10" Grid.Row="1"
                        Visibility="{Binding IsEditingServer,
                        Converter={StaticResource IsFalseVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox
                            ItemsSource="{Binding Servers}" DisplayMemberPath="DisplayName"
                            SelectedItem="{Binding SelectedServer,
                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Stretch" Margin="0,2,10,0"/>
                        <Button
                            Style="{StaticResource IconButton}" Grid.Column="1" VerticalAlignment="Center"
                            Command="{Binding CreateNewServerCommand}" Content="&#xE710;" />
                        <Button
                            Style="{StaticResource IconButton}" Grid.Column="2" VerticalAlignment="Center"
                            Command="{Binding EditServerCommand}" Content="&#xE70F;" />
                    </Grid>
                    <!-- Server Editor -->
                    <Grid
                        VerticalAlignment="Top" Grid.Row="2"
                        Background="{ThemeResource SystemControlBackgroundBaseLowBrush}"
                        Visibility="{Binding IsEditingServer,
                        Converter={StaticResource IsTrueVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Name: [ServerName] -->
                        <Grid Margin="10" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Name (opt):" VerticalAlignment="Center" Padding="0,0,10,0"/>
                            <TextBox
                                Text="{Binding NewServerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                                IsSpellCheckEnabled="False" InputScope="PersonalFullName"/>
                        </Grid>
                        <!-- Address: [Address] []SSL -->
                        <Grid Margin="10" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Address:" VerticalAlignment="Center"/>
                            <TextBox
                                Text="{Binding NewServerAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" 
                                IsSpellCheckEnabled="False" InputScope="EmailSmtpAddress" Margin="10,0" Grid.Column="1"/>
                            <CheckBox
                                IsChecked="{Binding NewServerUseSsl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" 
                                Content="SSL" MinWidth="65" Grid.Column="2"/>
                        </Grid>
                        <!-- Port range: [PortRange] [+] -->
                        <Grid Margin="10" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Port range:" VerticalAlignment="Center"/>
                            <TextBox
                                Text="{Binding NewServerPortRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" Grid.Column="1" InputScope="FormulaNumber"
                                />
                            <Button
                                Style="{StaticResource IconButton}" Content="&#xE710;" Command="{Binding AddPortRangeCommand}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" Grid.Column="2"/>
                        </Grid>
                        <!-- Ports [Ports ..] [T] -->
                        <Grid Margin="10" Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Ports:" VerticalAlignment="Top" Padding="0,10,0,0"/>
                            <ListBox
                                ItemsSource="{Binding NewServerPorts}" MinHeight="90" Grid.Column="1" Margin="10,0"
                                SelectedItem="{Binding SelectedPortRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}"/>
                            <Button
                                Style="{StaticResource IconButton}" VerticalAlignment="Top" Grid.Column="2"
                                Content="&#xE74D;" Command="{Binding DeleteSelectedPortRangeCommand}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}"/>
                        </Grid>
                        <!-- Password (opt): [********] -->
                        <Grid Margin="10" Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Password (opt):" VerticalAlignment="Center" Padding="0,0,10,0"/>
                            <PasswordBox
                                Password="{Binding NewServerPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsDeletingServer, Converter={StaticResource NegateConverter}}" Grid.Column="1"/>
                        </Grid>
                        <!-- [Delete?] [Ok] [X] [T] -->
                        <Grid Margin="10" Grid.Row="5" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button
                                Style="{StaticResource IconButton}"
                                Content="&#xE10B;" Command="{Binding SaveServerCommand}" />
                            <Grid Visibility="{Binding IsDeletingServer, Converter={StaticResource IsTrueVisibilityConverter}}" Grid.Column="1">
                                <Grid Background="{StaticResource WarningBackground}"/>
                                <TextBlock Text="Delete server?" Foreground="{StaticResource WarningForeground}" Margin="16,8" FontWeight="SemiBold"/>
                            </Grid>
                            <Button
                                Style="{StaticResource IconButton}" Grid.Column="2"
                                Content="&#xE711;" Command="{Binding CancelServerOperationCommand}" />
                            <Button
                                Style="{StaticResource IconButton}" Grid.Column="3"
                                Content="&#xE74D;" Command="{Binding DeleteServerCommand}"
                                IsEnabled="{Binding IsAddingNewServer, Converter={StaticResource NegateConverter}}"
                                Visibility="{Binding IsDeletingServer, Converter={StaticResource IsFalseVisibilityConverter}}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            <!-- End Servers -->
            
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!-- [] Use Network nick -->
                <CheckBox
                    IsChecked="{Binding UseNetworkNick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsNetworkNickAvailable}" Margin="0,10,10,10"
                    Content="Use Network info" VerticalAlignment="Center"/>
                <!-- [] Invisible mode -->
                <CheckBox
                    IsChecked="{Binding EnableInvisibleMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="Invisible mode" Margin="10,10" VerticalAlignment="Center" Grid.Column="1"/>
            </Grid>
            
            <!-- Full Name: [FullName] -->
            <Grid Margin="0,10" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Full name:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                <TextBox
                    Text="{Binding FullName, Mode=TwoWay}"
                    IsEnabled="{Binding UseNetworkNick, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                    IsSpellCheckEnabled="False" InputScope="PersonalFullName"/>
            </Grid>
            
            <!-- Email Address: [EmailAddress] -->
            <Grid Margin="0,10" Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Email:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                <TextBox
                    Text="{Binding EmailAddress, Mode=TwoWay}"
                    IsEnabled="{Binding UseNetworkNick, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                    IsSpellCheckEnabled="False" InputScope="EmailNameOrAddress"/>
            </Grid>

            <!-- Nick: [Nick] -->
            <Grid Margin="0,10" Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Nick:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                <TextBox
                    Text="{Binding Nick, Mode=TwoWay}"
                    IsEnabled="{Binding UseNetworkNick, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                    IsSpellCheckEnabled="False"/>
            </Grid>
            
            <!-- Backup nick: [BackupNick] -->
            <Grid Margin="0,10" Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Backup nick:" VerticalAlignment="Center" Padding="0,0,10,0"/>
                <TextBox
                    Text="{Binding BackupNick, Mode=TwoWay}"
                    IsEnabled="{Binding UseNetworkNick, Converter={StaticResource NegateConverter}}" Grid.Column="1"
                    IsSpellCheckEnabled="False"/>
            </Grid>
            
            <Grid Margin="0,10" Grid.Row="7" Width="200">
                <Button Content="Connect" Command="{Binding ConnectCommand}" HorizontalAlignment="Stretch"/>
            </Grid>

        </Grid>
    </Grid>
</Page>